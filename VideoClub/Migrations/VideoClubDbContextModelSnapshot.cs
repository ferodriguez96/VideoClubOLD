// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoClub.DataBase;

namespace VideoClub.Migrations
{
    [DbContext(typeof(VideoClubDbContext))]
    partial class VideoClubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VideoClub.Models.Alquiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ClienteId");

                    b.Property<int?>("DevolucionId");

                    b.Property<DateTime>("FechaAlta");

                    b.Property<DateTime>("FechaVto");

                    b.Property<Guid?>("PeliculaId");

                    b.Property<float>("PrecioOriginal");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DevolucionId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("VideoClub.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("DiasDeAlquiler");

                    b.Property<string>("Disenio");

                    b.Property<decimal>("Precio");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("VideoClub.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50);

                    b.Property<string>("Dni")
                        .HasMaxLength(10);

                    b.Property<string>("Domicilio")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("VideoClub.Models.Devolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaDevolucion");

                    b.Property<float>("PrecioFinal");

                    b.HasKey("Id");

                    b.ToTable("Devoluciones");
                });

            modelBuilder.Entity("VideoClub.Models.Genero", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("VideoClub.Models.Pelicula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnioLanzamiento");

                    b.Property<Guid>("CategoriaId");

                    b.Property<int>("Duracion");

                    b.Property<int>("Stock");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UnDatoDeTest");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("VideoClub.Models.PeliculaGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneroId");

                    b.Property<string>("GeneroId1");

                    b.Property<int>("PeliculaId");

                    b.Property<Guid?>("PeliculaId1");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId1");

                    b.HasIndex("PeliculaId1");

                    b.ToTable("PeliculasGeneros");
                });

            modelBuilder.Entity("VideoClub.Models.Alquiler", b =>
                {
                    b.HasOne("VideoClub.Models.Cliente", "Cliente")
                        .WithMany("Alquileres")
                        .HasForeignKey("ClienteId");

                    b.HasOne("VideoClub.Models.Devolucion", "Devolucion")
                        .WithMany()
                        .HasForeignKey("DevolucionId");

                    b.HasOne("VideoClub.Models.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("PeliculaId");
                });

            modelBuilder.Entity("VideoClub.Models.Pelicula", b =>
                {
                    b.HasOne("VideoClub.Models.Categoria", "Categoria")
                        .WithMany("Peliculas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VideoClub.Models.PeliculaGenero", b =>
                {
                    b.HasOne("VideoClub.Models.Genero", "Genero")
                        .WithMany("PeliculasGeneros")
                        .HasForeignKey("GeneroId1");

                    b.HasOne("VideoClub.Models.Pelicula", "Pelicula")
                        .WithMany("PeliculasGeneros")
                        .HasForeignKey("PeliculaId1");
                });
#pragma warning restore 612, 618
        }
    }
}
